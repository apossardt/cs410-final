/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjectGUI;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.BorderFactory;
import java.util.ArrayList;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Steve
 */
public class QuestionForm extends javax.swing.JFrame {
    public boolean gfIsMultipleChoice;
    private boolean gfIsSurvey;

    /**
     * Creates new form QuestionForm
     */
    public QuestionForm() {
        initComponents();
    }
    
    public QuestionForm(boolean afIsSurvey, String asParticipantNo)
    {
        initComponents();
        
        // Are these test questions (testing user on the reading) or demographic/survey?
        gfIsSurvey = afIsSurvey;
        
        // Participant Number
        ParticipantNumber = asParticipantNo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        lblQuestion = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        rdoAnswer1 = new javax.swing.JRadioButton();
        rdoAnswer2 = new javax.swing.JRadioButton();
        rdoAnswer3 = new javax.swing.JRadioButton();
        rdoAnswer4 = new javax.swing.JRadioButton();
        rdoAnswer5 = new javax.swing.JRadioButton();
        txtAnswer = new javax.swing.JTextField();
        rdoAnswer6 = new javax.swing.JRadioButton();
        lblError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblQuestion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblQuestion.setText("lblQuestion");

        btnNext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnGroup.add(rdoAnswer1);
        rdoAnswer1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoAnswer1.setText("rdoAnswer1");

        btnGroup.add(rdoAnswer2);
        rdoAnswer2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoAnswer2.setText("rdoAnswer2");

        btnGroup.add(rdoAnswer3);
        rdoAnswer3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoAnswer3.setText("rdoAnswer3");

        btnGroup.add(rdoAnswer4);
        rdoAnswer4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoAnswer4.setText("rdoAnswer4");

        btnGroup.add(rdoAnswer5);
        rdoAnswer5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoAnswer5.setText("rdoAnswer5");

        txtAnswer.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnGroup.add(rdoAnswer6);
        rdoAnswer6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rdoAnswer6.setText("rdoAnswer6");

        lblError.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 0, 0));
        lblError.setText("Error Label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNext))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rdoAnswer4)
                                        .addComponent(rdoAnswer3)
                                        .addComponent(rdoAnswer6)
                                        .addComponent(rdoAnswer5)
                                        .addComponent(lblError))
                                    .addGap(128, 128, 128))
                                .addComponent(rdoAnswer2)
                                .addComponent(rdoAnswer1))
                            .addComponent(lblQuestion)
                            .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 35, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblQuestion)
                .addGap(33, 33, 33)
                .addComponent(txtAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(rdoAnswer1)
                .addGap(30, 30, 30)
                .addComponent(rdoAnswer2)
                .addGap(30, 30, 30)
                .addComponent(rdoAnswer3)
                .addGap(30, 30, 30)
                .addComponent(rdoAnswer4)
                .addGap(30, 30, 30)
                .addComponent(rdoAnswer5)
                .addGap(30, 30, 30)
                .addComponent(rdoAnswer6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(lblError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addListener(QuestionFormListener toAdd)
    {
        listeners.add(toAdd);
    }
    
    public void QuestionFormCompleteEvent() {
        QuestionFormResults args = new QuestionFormResults(this);
        for (QuestionFormListener hl : listeners)
            hl.testQuestionFormComplete(args);
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            // Clear error label
            lblError.setText("");
            
            txtAnswer.setVisible(false); // Don't show the answer textbox
            
            startTime = System.currentTimeMillis();
            
            if (!gfIsSurvey) {
                // If it's the test questions version
                
                rdoAnswer6.setVisible(false); // No more than 5 answers per question for this form
                
                tableName = "QUESTION";
                
                try {
                    Class.forName("org.apache.derby.jdbc.ClientDriver");
                    // Get a connection
                    conn = DriverManager.getConnection(dbURL);
                }
                catch (Exception ex) {
                    ex.printStackTrace();
                }
                
                try {
                    // Select all from QUESTION table
                    stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                    questions = stmt.executeQuery("select * from " + tableName);
                    
                    // Head to the beginning so that we can call GetNextQuestion();
                    questions.beforeFirst();
                    
                    GetNextQuestion();
                }
                catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
            else {
                // Demographic survey questions
                
                tableName = "SURVEY";
            }
        }
        catch (Exception ex) {
            // Log exception?
        }
    }//GEN-LAST:event_formWindowOpened

    private boolean isEmpty(String input)
    {
        // Method allowing me to more easily check whether questions are empty, since there can be 0-6 questions
        return input.compareTo("") == 0;
    }
    
    private void AddResults() throws SQLException {
        if (!gfIsSurvey) {
            // Handle test results
            
            long llCurrentTime = System.currentTimeMillis(); // Take current time
            double ldQuestionTime = (llCurrentTime - startTime) / 1000.0; // Subtract to get elapsed time
            
            // Determine selected answer
            String lsAnswer;
        
            if (rdoAnswer1.isSelected()) {
                lsAnswer = "A";
            }
            else if (rdoAnswer2.isSelected()) {
                lsAnswer = "B";
            }   
            else if (rdoAnswer3.isSelected()) {
                lsAnswer = "C";
            }
            else if (rdoAnswer4.isSelected()) {
                lsAnswer = "D";
            }
            else {
                lsAnswer = "E";
            }
            
            // Check for correctness
            boolean lfIsCorrect = (lsAnswer.compareTo(gsCurrentCorrectAnswer) == 0);
            
            // Currently an Object[] with an ArrayList to hold them, but that is subject to change, as are the contents.
            Object[] loQuestionResult = new Object[5];
            
            loQuestionResult[0] = ParticipantNumber; // Participant Number should be included with all results
            loQuestionResult[1] = questions.getInt(1); // Get the question ID
            loQuestionResult[2] = lsAnswer; // User's answer - ask Dr. Bowman, do we need this or do we just care if it's correct?
            loQuestionResult[3] = lfIsCorrect; // Is the user's answer correct?
            loQuestionResult[4] = ldQuestionTime; // Elapsed time
            
            glResults.add(loQuestionResult); // Add the object[] to the arraylist
        }
        else {
            // Handle survey results
        }
    }
    
    private void GetNextQuestion() throws SQLException {
        // Deselect the questions
        rdoAnswer1.doClick();
        rdoAnswer2.doClick();
        rdoAnswer3.doClick();
        rdoAnswer4.doClick();
        rdoAnswer5.doClick();
        
        // Advance within the result set
        questions.next();
        
        // Get the question, answers and correct answer from the result set
        String lsQuestion = questions.getString(2);
        String lsAnswerA = questions.getString(3);
        String lsAnswerB = questions.getString(4);
        String lsAnswerC = questions.getString(5);
        String lsAnswerD = questions.getString(6);
        String lsAnswerE = questions.getString(7);
        gsCurrentCorrectAnswer = questions.getString(8);
                    
        // Set the question label text
        lblQuestion.setText(lsQuestion);
        
        // If the answers are not empty, set their text and set them visible. Else, set them invisible.
        if (!isEmpty(lsAnswerA.trim())) {
            rdoAnswer1.setText(lsAnswerA);
            rdoAnswer1.setVisible(true);
        }
        else {
            rdoAnswer1.setVisible(false);
        }

        if (!isEmpty(lsAnswerB.trim())) {
            rdoAnswer2.setText(lsAnswerB);
            rdoAnswer2.setVisible(true);
        }
        else {
            rdoAnswer2.setVisible(false);
        }

        if (!isEmpty(lsAnswerC.trim())) {
            rdoAnswer3.setText(lsAnswerC);
            rdoAnswer3.setVisible(true);
        }
        else {
            rdoAnswer3.setVisible(false);
        }

        if (!isEmpty(lsAnswerD.trim())) {
            rdoAnswer4.setText(lsAnswerD);
            rdoAnswer4.setVisible(true);
        }
        else {
            rdoAnswer4.setVisible(false);
        }

        if (!isEmpty(lsAnswerE.trim())) {
            rdoAnswer5.setText(lsAnswerE);
            rdoAnswer5.setVisible(true);
        }
        else {
            rdoAnswer5.setVisible(false);
        }
    }
    
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        try {
            if (!gfIsSurvey) {
                // Ensure that an answer is selected.
                if (rdoAnswer1.isSelected() || rdoAnswer2.isSelected() || rdoAnswer3.isSelected() || rdoAnswer4.isSelected() || rdoAnswer5.isSelected()) {
                    AddResults();

                    if (!questions.isLast())
                        GetNextQuestion();
                    else
                        QuestionFormCompleteEvent();
                }
                else {
                    lblError.setText("Please select an answer.");
                }
            }
            else {
                
            }
        }
        catch (Exception ex) {
            // Log exception?
        }
    }//GEN-LAST:event_btnNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionForm().setVisible(true);
            }
        });
    }
    
    // Global variables
    private final ArrayList<QuestionFormListener> listeners = new ArrayList();
    private String ParticipantNumber; 
    private long startTime;
    private ResultSet questions;
    private String gsCurrentCorrectAnswer;
    private ArrayList<Object[]> glResults = new ArrayList();
    
    // For DB
    private static String dbURL = "jdbc:derby://localhost:1527/sidresDB;create=true;user=sidresAdmin;password=1x!Software";
    private static String tableName;
    // jdbc Connection
    private static Connection conn = null;
    private static Statement stmt = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton btnNext;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblQuestion;
    private javax.swing.JRadioButton rdoAnswer1;
    private javax.swing.JRadioButton rdoAnswer2;
    private javax.swing.JRadioButton rdoAnswer3;
    private javax.swing.JRadioButton rdoAnswer4;
    private javax.swing.JRadioButton rdoAnswer5;
    private javax.swing.JRadioButton rdoAnswer6;
    private javax.swing.JTextField txtAnswer;
    // End of variables declaration//GEN-END:variables
}
